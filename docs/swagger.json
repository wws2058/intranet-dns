{
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "simple intranet dns management system, dns crud operation with bind9",
        "title": "sre intranet dns backend demo",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/api/v1/apis": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "list api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "page, min=1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size, min=10, max=1000",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "api path",
                        "name": "path",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "api method",
                        "name": "method",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "api activated",
                        "name": "active",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "apis",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "update api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "req",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/apis.updateApiReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "api updated",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/audit_logs": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "list system audit logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "min=1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min=10, max=1000",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "user name",
                        "name": "user_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "request uid",
                        "name": "request_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "remote ip",
                        "name": "client_ip",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "2006-01-02 15:04:05",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "2006-01-02 15:04:05",
                        "name": "end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "audit logs",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/cronjobs": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cronjob"
                ],
                "summary": "list cronjob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "page, min=1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size, min=10, max=1000",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cronjob name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cronjob creator",
                        "name": "creator",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cronjob type",
                        "name": "task_type",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "cronjob running status",
                        "name": "started",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "cronjob last running status",
                        "name": "last_succeed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "cronjobs",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cronjob"
                ],
                "summary": "update cronjob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "update cronjob request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.updateCronjobReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "cronjob id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cronjob"
                ],
                "summary": "add cronjob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "new cronjob request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.newCronjob"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new cronjob id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/cronjobs/functions": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cronjob"
                ],
                "summary": "list cronjob functions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "cronjob functions",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/cronjobs/{id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cronjob"
                ],
                "summary": "del cronjob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "cronjob id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "cronjob id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/dns/edns": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dns"
                ],
                "summary": "edns query",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "domain",
                        "name": "domain",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "rrs",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/dns/isps": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dns"
                ],
                "summary": "province isp ns ip",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "isps",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/dns/probes": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dns"
                ],
                "summary": "list dns probe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "min=1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min=10, max=1000",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "record name",
                        "name": "record_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "record zone",
                        "name": "zone",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "probes",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dns"
                ],
                "summary": "update dns probe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "req",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.updateProbeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dns"
                ],
                "summary": "add dns probe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "req",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.newProbe"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "probe id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/dns/probes/{id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dns"
                ],
                "summary": "del dns probe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "probe id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "probe id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/dns/records": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dns"
                ],
                "summary": "list intranet dns",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "min=1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min=10, max=1000",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "domain",
                        "name": "record_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "type",
                        "name": "record_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "data",
                        "name": "record_content",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "dns records",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dns"
                ],
                "summary": "update intranet dns",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "update dns request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dnslib.UpdateDnsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "record id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dns"
                ],
                "summary": "add intranet dns",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "dns request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.newDns"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dns"
                ],
                "summary": "del intranet dns record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "record id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "del all of the same type rrs",
                        "name": "clean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "record id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/dns/rrs": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dns"
                ],
                "summary": "intranet dns query",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "domain",
                        "name": "domain",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "rrs",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/dns/zones": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dns"
                ],
                "summary": "list intranet dns zone",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "min=1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min=10, max=1000",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "zone",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dns"
                ],
                "summary": "update intranet dns zone",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "update zone request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.updateZoneReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "zone id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dns"
                ],
                "summary": "add intranet dns zone",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "zone request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.newZone"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "zone id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/dns/zones/{id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dns"
                ],
                "summary": "del intranet dns zone",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "zone id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "zone id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/ping": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "ping",
                "parameters": [
                    {
                        "type": "string",
                        "description": "mock",
                        "name": "mock",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/roles": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "list system roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "min=1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min=10, max=1000",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "role chinese name",
                        "name": "name_cn",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "roles",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "update system role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "role request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.updateRoleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "add system role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "role request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SysRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/roles/{id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "del role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "role id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/roles/{id}/apis": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "system role accessible apis",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "role id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role detail with accessible apis",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "list system user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "page, min=1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size, min=10, max=1000",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "user role's id",
                        "name": "role_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "user chinese name",
                        "name": "name_cn",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "system role activated",
                        "name": "active",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "users",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "update system role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "update user request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.updateUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "add system user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "user request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.newUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/login": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "user login",
                "parameters": [
                    {
                        "description": "user request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.userLoginInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "del system user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apis.newCronjob": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "task desc",
                    "type": "string"
                },
                "name": {
                    "description": "task name",
                    "type": "string"
                },
                "spec": {
                    "description": "spec \u0026 s m h D M W",
                    "type": "string",
                    "minLength": 9
                },
                "taskArgs": {
                    "description": "task args",
                    "$ref": "#/definitions/models.Args"
                },
                "taskType": {
                    "description": "task type",
                    "type": "string"
                }
            }
        },
        "apis.newDns": {
            "type": "object",
            "properties": {
                "record_content": {
                    "type": "string"
                },
                "record_name": {
                    "type": "string"
                },
                "record_ttl": {
                    "type": "integer"
                },
                "record_type": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "apis.newProbe": {
            "type": "object",
            "properties": {
                "expect_answer": {
                    "type": "object"
                },
                "intranet": {
                    "type": "boolean"
                },
                "record_name": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "apis.newUser": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "user email address",
                    "type": "string",
                    "minLength": 5
                },
                "name": {
                    "description": "user name",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1
                },
                "name_cn": {
                    "description": "user cn name",
                    "type": "string",
                    "maxLength": 20
                },
                "password": {
                    "description": "user password, sha256 encode save",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 8
                },
                "role_ids": {
                    "description": "user roles",
                    "type": "object"
                }
            }
        },
        "apis.newZone": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "zone description",
                    "type": "string"
                },
                "ns_address": {
                    "description": "ns server ip:port",
                    "type": "string"
                },
                "tsig_name": {
                    "description": "tsig key name",
                    "type": "string"
                },
                "tsig_secret": {
                    "description": "ns dynamic update key, to be encoded",
                    "type": "string"
                },
                "zone": {
                    "description": "ns name zone name FQDN",
                    "type": "string"
                }
            }
        },
        "apis.updateApiReq": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "audit": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "apis.updateCronjobReq": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "description": {
                    "description": "task desc",
                    "type": "string"
                },
                "id": {
                    "description": "user id",
                    "type": "integer"
                },
                "name": {
                    "description": "task name",
                    "type": "string"
                },
                "spec": {
                    "description": "spec \u0026 s m h D M W",
                    "type": "string"
                },
                "started": {
                    "description": "task switch",
                    "type": "boolean"
                },
                "task_args": {
                    "description": "task args",
                    "$ref": "#/definitions/models.Args"
                }
            }
        },
        "apis.updateProbeReq": {
            "type": "object",
            "properties": {
                "expect_answer": {
                    "type": "object"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "apis.updateRoleReq": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "api_ids": {
                    "description": "role accessible apis id",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "description": "role id",
                    "type": "integer"
                },
                "name": {
                    "description": "role en name",
                    "type": "string"
                },
                "name_cn": {
                    "description": "role cn name",
                    "type": "string"
                }
            }
        },
        "apis.updateUserReq": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "active": {
                    "description": "user is active",
                    "type": "boolean"
                },
                "email": {
                    "description": "user email address",
                    "type": "string"
                },
                "id": {
                    "description": "user id",
                    "type": "integer"
                },
                "role_ids": {
                    "description": "user roles",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "apis.updateZoneReq": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ns_address": {
                    "type": "string"
                },
                "tsig_name": {
                    "type": "string"
                },
                "tsig_secret": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "apis.userLoginInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "user name",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1
                },
                "password": {
                    "description": "user password, sha256 encode save",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 8
                }
            }
        },
        "ctx.StdResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "data"
                },
                "error": {
                    "description": "self err",
                    "type": "string"
                },
                "pages": {
                    "description": "pages",
                    "$ref": "#/definitions/models.PageRsp"
                },
                "request_id": {
                    "description": "api request uid",
                    "type": "string"
                },
                "status": {
                    "description": "true: succeed, false: failed",
                    "type": "boolean"
                }
            }
        },
        "dnslib.UpdateDnsReq": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "record_content": {
                    "type": "string"
                },
                "record_name": {
                    "type": "string"
                },
                "record_ttl": {
                    "type": "integer"
                }
            }
        },
        "models.Api": {
            "type": "object",
            "properties": {
                "active": {
                    "description": "api is activated or not, 0 false",
                    "type": "boolean"
                },
                "audit": {
                    "description": "api is audited or not, 0 false",
                    "type": "boolean"
                },
                "auth": {
                    "description": "api requires auth",
                    "type": "boolean"
                },
                "created_at": {
                    "description": "create time",
                    "type": "string"
                },
                "description": {
                    "description": "api description",
                    "type": "string"
                },
                "id": {
                    "description": "primary id",
                    "type": "integer"
                },
                "method": {
                    "description": "api method",
                    "type": "string"
                },
                "path": {
                    "description": "api path",
                    "type": "string"
                },
                "updated_at": {
                    "description": "create time",
                    "type": "string"
                }
            }
        },
        "models.Args": {
            "type": "object",
            "properties": {
                "function_name": {
                    "description": "function name",
                    "type": "string"
                },
                "url": {
                    "description": "http url",
                    "type": "string"
                }
            }
        },
        "models.PageRsp": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.SysRole": {
            "type": "object",
            "properties": {
                "accessible_apis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Api"
                    }
                },
                "api_ids": {
                    "type": "object"
                },
                "created_at": {
                    "description": "create time",
                    "type": "string"
                },
                "id": {
                    "description": "primary id",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "name_cn": {
                    "type": "string"
                },
                "updated_at": {
                    "description": "create time",
                    "type": "string"
                }
            }
        }
    }
}